GENERAL_TEST_QASM = '''OPENQASM 2.0;
include "qelib1.inc";
qreg q[3];
qreg r[3];
h q;
cx q, r;
creg c[3];
creg d[3];
barrier q;
measure q->c;
measure r->d;
'''

MEASUREMENT_TEST_QASM = '''OPENQASM 2.0;
include "qelib1.inc";
qreg q[3];
creg c[3];
measure q->c;
'''

GROVER_TEST_QASM = '''OPENQASM 2.0;
include "qelib1.inc";
qreg q[5];
creg c[5];
h q[1];
h q[2];
s q[1];
s q[2];
h q[2];
cx q[1],q[2];
h q[2];
s q[1];
s q[2];
h q[1];
h q[2];
x q[1];
x q[2];
h q[2];
cx q[1],q[2];
h q[2];
x q[1];
x q[2];
h q[1];
h q[2];
measure q[1] -> c[1];
measure q[2] -> c[2];
'''

TEN_Q_CC_QASM = '''OPENQASM 2.0;
include "qelib1.inc";
qreg q[10];
creg c[10];
h q[0];
h q[1];
h q[2];
h q[3];
h q[4];
h q[5];
h q[6];
h q[7];
h q[8];
cx q[0],q[9];
cx q[1],q[9];
cx q[2],q[9];
cx q[3],q[9];
cx q[4],q[9];
cx q[5],q[9];
cx q[6],q[9];
cx q[7],q[9];
cx q[8],q[9];
measure q[9] -> c[9];
if(c==0) x q[9];
if(c==0) h q[9];
if(c==512) h q[0];
if(c==512) h q[1];
if(c==512) h q[2];
if(c==512) h q[3];
if(c==512) h q[4];
if(c==512) h q[5];
if(c==512) h q[6];
if(c==512) h q[7];
if(c==512) h q[8];
if(c==0) cx q[6],q[9];
if(c==0) h q[0];
if(c==0) h q[1];
if(c==0) h q[2];
if(c==0) h q[3];
if(c==0) h q[4];
if(c==0) h q[5];
if(c==0) h q[6];
if(c==0) h q[7];
if(c==0) h q[8];
measure q[0] -> c[0];
measure q[1] -> c[1];
measure q[2] -> c[2];
measure q[3] -> c[3];
measure q[4] -> c[4];
measure q[5] -> c[5];
measure q[6] -> c[6];
measure q[7] -> c[7];
measure q[8] -> c[8];
'''

TEN_Q_CC_QASM_ZERO = '''OPENQASM 2.0;
include "qelib1.inc";
qreg q[10];
creg c[10];
h q[0];
h q[1];
h q[2];
h q[3];
h q[4];
h q[5];
h q[6];
h q[7];
h q[8];
cx q[0],q[9];
cx q[1],q[9];
cx q[2],q[9];
cx q[3],q[9];
cx q[4],q[9];
cx q[5],q[9];
cx q[6],q[9];
cx q[7],q[9];
cx q[8],q[9];
measure q[9] -> c[9];
x q[9];
h q[9];
cx q[6],q[9];
h q[0];
h q[1];
h q[2];
h q[3];
h q[4];
h q[5];
h q[6];
h q[7];
h q[8];
measure q[0] -> c[0];
measure q[1] -> c[1];
measure q[2] -> c[2];
measure q[3] -> c[3];
measure q[4] -> c[4];
measure q[5] -> c[5];
measure q[6] -> c[6];
measure q[7] -> c[7];
measure q[8] -> c[8];
'''

TEN_Q_CC_QASM_ONE = '''OPENQASM 2.0;
include "qelib1.inc";
qreg q[10];
creg c[10];
h q[0];
h q[1];
h q[2];
h q[3];
h q[4];
h q[5];
h q[6];
h q[7];
h q[8];
cx q[0],q[9];
cx q[1],q[9];
cx q[2],q[9];
cx q[3],q[9];
cx q[4],q[9];
cx q[5],q[9];
cx q[6],q[9];
cx q[7],q[9];
cx q[8],q[9];
measure q[9] -> c[9];
h q[0];
h q[1];
h q[2];
h q[3];
h q[4];
h q[5];
h q[6];
h q[7];
h q[8];
measure q[0] -> c[0];
measure q[1] -> c[1];
measure q[2] -> c[2];
measure q[3] -> c[3];
measure q[4] -> c[4];
measure q[5] -> c[5];
measure q[6] -> c[6];
measure q[7] -> c[7];
measure q[8] -> c[8];
'''

ELEVEN_Q_CC_QASM = '''OPENQASM 2.0;
include "qelib1.inc";
qreg q[11];
creg c[11];
h q[0];
h q[1];
h q[2];
h q[3];
h q[4];
h q[5];
h q[6];
h q[7];
h q[8];
h q[9];
cx q[0],q[10];
cx q[1],q[10];
cx q[2],q[10];
cx q[3],q[10];
cx q[4],q[10];
cx q[5],q[10];
cx q[6],q[10];
cx q[7],q[10];
cx q[8],q[10];
cx q[9],q[10];
measure q[10] -> c[10];
if(c==0) x q[10];
if(c==0) h q[10];
if(c==1024) h q[0];
if(c==1024) h q[1];
if(c==1024) h q[2];
if(c==1024) h q[3];
if(c==1024) h q[4];
if(c==1024) h q[5];
if(c==1024) h q[6];
if(c==1024) h q[7];
if(c==1024) h q[8];
if(c==1024) h q[9];
barrier q[0],q[1],q[2],q[3],q[4],q[5],q[6],q[7],q[8],q[9],q[10];
if(c==0) cx q[6],q[10];
barrier q[0],q[1],q[2],q[3],q[4],q[5],q[6],q[7],q[8],q[9],q[10];
if(c==0) h q[0];
if(c==0) h q[1];
if(c==0) h q[2];
if(c==0) h q[3];
if(c==0) h q[4];
if(c==0) h q[5];
if(c==0) h q[6];
if(c==0) h q[7];
if(c==0) h q[8];
if(c==0) h q[9];
measure q[0] -> c[0];
measure q[1] -> c[1];
measure q[2] -> c[2];
measure q[3] -> c[3];
measure q[4] -> c[4];
measure q[5] -> c[5];
measure q[6] -> c[6];
measure q[7] -> c[7];
measure q[8] -> c[8];
measure q[9] -> c[9];
'''

TWELVE_Q_CC_QASM = '''OPENQASM 2.0;
include "qelib1.inc";
qreg q[12];
creg c[12];
h q[0];
h q[1];
h q[2];
h q[3];
h q[4];
h q[5];
h q[6];
h q[7];
h q[8];
h q[9];
h q[10];
cx q[0],q[11];
cx q[1],q[11];
cx q[2],q[11];
cx q[3],q[11];
cx q[4],q[11];
cx q[5],q[11];
cx q[6],q[11];
cx q[7],q[11];
cx q[8],q[11];
cx q[9],q[11];
cx q[10],q[11];
measure q[11] -> c[11];
if(c==0) x q[11];
if(c==0) h q[11];
if(c==2048) h q[0];
if(c==2048) h q[1];
if(c==2048) h q[2];
if(c==2048) h q[3];
if(c==2048) h q[4];
if(c==2048) h q[5];
if(c==2048) h q[6];
if(c==2048) h q[7];
if(c==2048) h q[8];
if(c==2048) h q[9];
if(c==2048) h q[10];
barrier q[0],q[1],q[2],q[3],q[4],q[5],q[6],q[7],q[8],q[9],q[10],q[11];
if(c==0) cx q[6],q[11];
barrier q[0],q[1],q[2],q[3],q[4],q[5],q[6],q[7],q[8],q[9],q[10],q[11];
if(c==0) h q[0];
if(c==0) h q[1];
if(c==0) h q[2];
if(c==0) h q[3];
if(c==0) h q[4];
if(c==0) h q[5];
if(c==0) h q[6];
if(c==0) h q[7];
if(c==0) h q[8];
if(c==0) h q[9];
if(c==0) h q[10];
measure q[0] -> c[0];
measure q[1] -> c[1];
measure q[2] -> c[2];
measure q[3] -> c[3];
measure q[4] -> c[4];
measure q[5] -> c[5];
measure q[6] -> c[6];
measure q[7] -> c[7];
measure q[8] -> c[8];
measure q[9] -> c[9];
measure q[10] -> c[10];
'''

THIRTEEN_Q_CC_QASM = '''OPENQASM 2.0;
include "qelib1.inc";
qreg q[13];
creg c[13];
h q[0];
h q[1];
h q[2];
h q[3];
h q[4];
h q[5];
h q[6];
h q[7];
h q[8];
h q[9];
h q[10];
h q[11];
cx q[0],q[12];
cx q[1],q[12];
cx q[2],q[12];
cx q[3],q[12];
cx q[4],q[12];
cx q[5],q[12];
cx q[6],q[12];
cx q[7],q[12];
cx q[8],q[12];
cx q[9],q[12];
cx q[10],q[12];
cx q[11],q[12];
measure q[12] -> c[12];
if(c==0) x q[12];
if(c==0) h q[12];
if(c==4096) h q[0];
if(c==4096) h q[1];
if(c==4096) h q[2];
if(c==4096) h q[3];
if(c==4096) h q[4];
if(c==4096) h q[5];
if(c==4096) h q[6];
if(c==4096) h q[7];
if(c==4096) h q[8];
if(c==4096) h q[9];
if(c==4096) h q[10];
if(c==4096) h q[11];
barrier q[0],q[1],q[2],q[3],q[4],q[5],q[6],q[7],q[8],q[9],q[10],q[11],q[12];
if(c==0) cx q[6],q[12];
barrier q[0],q[1],q[2],q[3],q[4],q[5],q[6],q[7],q[8],q[9],q[10],q[11],q[12];
if(c==0) h q[0];
if(c==0) h q[1];
if(c==0) h q[2];
if(c==0) h q[3];
if(c==0) h q[4];
if(c==0) h q[5];
if(c==0) h q[6];
if(c==0) h q[7];
if(c==0) h q[8];
if(c==0) h q[9];
if(c==0) h q[10];
if(c==0) h q[11];
measure q[0] -> c[0];
measure q[1] -> c[1];
measure q[2] -> c[2];
measure q[3] -> c[3];
measure q[4] -> c[4];
measure q[5] -> c[5];
measure q[6] -> c[6];
measure q[7] -> c[7];
measure q[8] -> c[8];
measure q[9] -> c[9];
measure q[10] -> c[10];
measure q[11] -> c[11];
'''

EXPECTED_MEASUREMENT = {'c': [0, 0, 0]}